///// 해석

1. PreparedStatement 이나 PrepareStatement 같은 것들은 SQL 객체들이다. 빌트 인 되어있는 객체로 내가 이 스탠다드 인스턴스를
대체해줄 새로운 객체를 할당하는 것이다. 스탠다드인지는 직접 마우스를 올려보면 알 수 있다.

2. 웹 어플리케이션에서 세션(Session)을 사용하여 특정 사용자의 정보를 확인하고 가져오는 과정을 보여준다. 세션은 사용자가
웹 어플리케이션과 상호작용하는 동안 상태를 유지하기 위해 사용된다. 이 코드의 목적은 세션에 저장된 사용자ID를 확인하고, 존재하면
그 값을 가져오는 것이다.

2-1) 'Session.getAtribute(userID) != null'
- 'Session.getAtribute(userID) != null' : 세션에서 'userID'라는 이름으로 저장된 값을 가져온다.

2-2) 'userID = (String) session.getAttribute(userID) : 세션에 'userID'라는 이름으로 저장된 값을 가져와서 'userID' 변수에 저장한다.
또한, (String)은 가져온 값을 문자열로 형변환하는 부분이다. 세션에서 가져온 값이 문자열이라고 가정하고 이를 명시적으로 변환한다.
이건, 사용자가 로그인했는지, 혹은 특정 사용자 정보를 세션을 통해 유지하고 있는지를 확인할 수 있다.   

3. int result = bbsDAO.write(bbs.getBbsTitle(), userID, bbs.getBbsContent());
: 'bbsDAO' 객체의 'write' 메소드를 호출하여 게시글을 작성하는 기능을 수행한다.

3-1) bbsDAO : 이 객체는 DB와 상호작용하는 역할을 한다. 주로 게시판 시스템에서 게시글을 저장하거나 불러오는 등의 작업을 담당한다.
3-2) write () : 게시글을 DB에 저장하는 기능을 한다. 여러 매개변수를 받는다.
3-3) bbs.getBbsTitle() : 'bbs' 객체에서 게시글의 제목을 가져오는 메서드이다. 'bbs'는 게시글 정보를 담고 있는 객체로, 이 메소드를 통해
제목을 추출한다.
3-4) int result : 'write' 메서드의 반환값을 저장하는 변수이다. 일반적으로 게시글이 성공적으로 저장되었는지( 성공 : 1, 실패 : 0 ) 반환하여
저장하는 변수라고 보면된다. 